{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u1ED9i Dung Tr\\xEAn Tr\\u01B0\\u1EDDng\\\\WebCoolmate\\\\client\\\\src\\\\components\\\\Message\\\\AIchat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatAIApp = () => {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [isResponseGenerating, setIsResponseGenerating] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [theme, setTheme] = useState(localStorage.getItem(\"themeColor\") || 'dark_mode');\n  const API_KEY = \"AIzaSyCVqQlTN7ylrRha-gzAdggRmsSPpyNfm0A\"; // Your API key here\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\n\n  // Load theme and chat data from localStorage on page load\n  useEffect(() => {\n    const savedChats = localStorage.getItem(\"saved-chats\");\n    if (savedChats) {\n      setChatHistory(JSON.parse(savedChats));\n    }\n    document.body.classList.toggle(\"light_mode\", theme === 'light_mode');\n  }, [theme]);\n  const handleToggleTheme = () => {\n    const newTheme = theme === 'light_mode' ? 'dark_mode' : 'light_mode';\n    setTheme(newTheme);\n    localStorage.setItem(\"themeColor\", newTheme);\n  };\n  const handleDeleteChats = () => {\n    if (window.confirm(\"Sau khi xóa sẽ không thể hoàn tác. Bạn có muốn xóa toàn bộ đoạn chat này về mặc định?\")) {\n      setChatHistory([]);\n      localStorage.removeItem(\"saved-chats\");\n    }\n  };\n  const createMessageElement = (content, isUserMessage, isLoading = false) => {\n    return {\n      content,\n      isUserMessage,\n      isLoading\n    };\n  };\n  const showTypingEffect = (text, incomingMessageDiv) => {\n    const words = text.split(\" \");\n    let currentWordIndex = 0;\n    const typingInterval = setInterval(() => {\n      incomingMessageDiv.content += ` ${words[currentWordIndex++]}`;\n      if (currentWordIndex === words.length) {\n        clearInterval(typingInterval);\n        setIsResponseGenerating(false);\n        localStorage.setItem(\"saved-chats\", JSON.stringify(chatHistory));\n      }\n    }, 75);\n  };\n  const generateAPIResponse = async incomingMessageDiv => {\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            role: \"user\",\n            parts: [{\n              text: userMessage\n            }]\n          }]\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error.message);\n      const apiResponse = data === null || data === void 0 ? void 0 : data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, \"$1\");\n      showTypingEffect(apiResponse, incomingMessageDiv);\n    } catch (error) {\n      setIsResponseGenerating(false);\n      incomingMessageDiv.content = error.message;\n    }\n  };\n  const handleSendMessage = () => {\n    if (!userMessage || isResponseGenerating) return;\n    setIsResponseGenerating(true);\n    const outgoingMessageDiv = createMessageElement(userMessage, true);\n    setChatHistory([...chatHistory, outgoingMessageDiv]);\n    setUserMessage(\"\"); // Clear input field\n    setTimeout(() => {\n      const incomingMessageDiv = createMessageElement(\"\", false, true);\n      setChatHistory([...chatHistory, outgoingMessageDiv, incomingMessageDiv]);\n      generateAPIResponse(incomingMessageDiv);\n    }, 500); // Simulate typing delay\n  };\n  const handleSuggestionClick = message => {\n    setUserMessage(message);\n    handleSendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-all\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ai-subtitle\",\n      children: \" GPT AI health care\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ai-suggestion-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => handleSuggestionClick(\"Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"N\\u1EBFu t\\xF4i b\\u1ECB ho c\\u1EA7n \\u0111i\\u1EC1u tr\\u1ECB nh\\u01B0 th\\u1EBF n\\xE0o \\u0111\\u1EC3 t\\xECnh h\\xECnh s\\u1EE9c kh\\u1ECFe \\u0111\\u01B0\\u1EE3c c\\u1EA3i thi\\u1EC7n t\\u1ED1t h\\u01A1n ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => handleSuggestionClick(\"Nếu tôi bị sổ mũi thì phải xử lý như thế nào ?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"N\\u1EBFu t\\xF4i b\\u1ECB s\\u1ED5 m\\u0169i th\\xEC ph\\u1EA3i x\\u1EED l\\xFD nh\\u01B0 th\\u1EBF n\\xE0o ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"lightbulb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => handleSuggestionClick(\"Bạn có thể tư vấn giúp tôi kế hoạch giảm cân ?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"B\\u1EA1n c\\xF3 th\\u1EC3 t\\u01B0 v\\u1EA5n gi\\xFAp t\\xF4i k\\u1EBF ho\\u1EA1ch gi\\u1EA3m c\\xE2n ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"explore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => handleSuggestionClick(\"Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"T\\u01B0 v\\u1EA5n th\\xF3i quen sinh ho\\u1EA1t l\\xE0nh m\\u1EA1nh gi\\xFAp s\\u1EE9c kh\\u1ECFe tr\\u1EDF n\\xEAn t\\u1ED1t h\\u01A1n.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-chat-list\",\n      children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUserMessage ? \"outgoing\" : \"incoming\"} ${message.isLoading ? \"loading\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"avatar\",\n            src: message.isUserMessage ? \"https://i.imgur.com/3xFFbKJ.jpeg\" : \"https://img.icons8.com/?size=512&id=iGqse5s20iex&format=png\",\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), message.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-typing-area\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        className: \"ai-typing-form\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleSendMessage();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userMessage,\n            placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y...\",\n            className: \"ai-typing-input\",\n            onChange: e => setUserMessage(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"send-ai-message-button\",\n            className: \"ai-icon material-symbols-rounded\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"theme-ai-toggle-button\",\n            className: \"ai-icon material-symbols-rounded\",\n            onClick: handleToggleTheme,\n            children: theme === 'light_mode' ? 'dark_mode' : 'light_mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"delete-ai-chat-button\",\n            className: \"ai-icon material-symbols-rounded\",\n            onClick: handleDeleteChats,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatAIApp, \"1VGrMictvMgE5jPElzemZtJQ2ys=\");\n_c = ChatAIApp;\nexport default ChatAIApp;\nvar _c;\n$RefreshReg$(_c, \"ChatAIApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatAIApp","_s","userMessage","setUserMessage","isResponseGenerating","setIsResponseGenerating","chatHistory","setChatHistory","theme","setTheme","localStorage","getItem","API_KEY","API_URL","savedChats","JSON","parse","document","body","classList","toggle","handleToggleTheme","newTheme","setItem","handleDeleteChats","window","confirm","removeItem","createMessageElement","content","isUserMessage","isLoading","showTypingEffect","text","incomingMessageDiv","words","split","currentWordIndex","typingInterval","setInterval","length","clearInterval","stringify","generateAPIResponse","response","fetch","method","headers","contents","role","parts","data","json","ok","Error","error","message","apiResponse","candidates","replace","handleSendMessage","outgoingMessageDiv","setTimeout","handleSuggestionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","src","alt","action","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","required","id","_c","$RefreshReg$"],"sources":["D:/Nội Dung Trên Trường/WebCoolmate/client/src/components/Message/AIchat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChatAIApp = () => {\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [isResponseGenerating, setIsResponseGenerating] = useState(false);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [theme, setTheme] = useState(localStorage.getItem(\"themeColor\") || 'dark_mode');\r\n\r\n  const API_KEY = \"AIzaSyCVqQlTN7ylrRha-gzAdggRmsSPpyNfm0A\"; // Your API key here\r\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\r\n\r\n  // Load theme and chat data from localStorage on page load\r\n  useEffect(() => {\r\n    const savedChats = localStorage.getItem(\"saved-chats\");\r\n    if (savedChats) {\r\n      setChatHistory(JSON.parse(savedChats));\r\n    }\r\n    document.body.classList.toggle(\"light_mode\", theme === 'light_mode');\r\n  }, [theme]);\r\n\r\n  const handleToggleTheme = () => {\r\n    const newTheme = theme === 'light_mode' ? 'dark_mode' : 'light_mode';\r\n    setTheme(newTheme);\r\n    localStorage.setItem(\"themeColor\", newTheme);\r\n  };\r\n\r\n  const handleDeleteChats = () => {\r\n    if (window.confirm(\"Sau khi xóa sẽ không thể hoàn tác. Bạn có muốn xóa toàn bộ đoạn chat này về mặc định?\")) {\r\n      setChatHistory([]);\r\n      localStorage.removeItem(\"saved-chats\");\r\n    }\r\n  };\r\n\r\n  const createMessageElement = (content, isUserMessage, isLoading = false) => {\r\n    return {\r\n      content,\r\n      isUserMessage,\r\n      isLoading,\r\n    };\r\n  };\r\n\r\n  const showTypingEffect = (text, incomingMessageDiv) => {\r\n    const words = text.split(\" \");\r\n    let currentWordIndex = 0;\r\n\r\n    const typingInterval = setInterval(() => {\r\n      incomingMessageDiv.content += ` ${words[currentWordIndex++]}`;\r\n      if (currentWordIndex === words.length) {\r\n        clearInterval(typingInterval);\r\n        setIsResponseGenerating(false);\r\n        localStorage.setItem(\"saved-chats\", JSON.stringify(chatHistory));\r\n      }\r\n    }, 75);\r\n  };\r\n\r\n  const generateAPIResponse = async (incomingMessageDiv) => {\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [{ role: \"user\", parts: [{ text: userMessage }] }],\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.error.message);\r\n\r\n      const apiResponse = data?.candidates[0].content.parts[0].text.replace(\r\n        /\\*\\*(.*?)\\*\\*/g,\r\n        \"$1\"\r\n      );\r\n\r\n      showTypingEffect(apiResponse, incomingMessageDiv);\r\n    } catch (error) {\r\n      setIsResponseGenerating(false);\r\n      incomingMessageDiv.content = error.message;\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!userMessage || isResponseGenerating) return;\r\n\r\n    setIsResponseGenerating(true);\r\n    const outgoingMessageDiv = createMessageElement(userMessage, true);\r\n    setChatHistory([...chatHistory, outgoingMessageDiv]);\r\n\r\n    setUserMessage(\"\"); // Clear input field\r\n    setTimeout(() => {\r\n      const incomingMessageDiv = createMessageElement(\"\", false, true);\r\n      setChatHistory([...chatHistory, outgoingMessageDiv, incomingMessageDiv]);\r\n      generateAPIResponse(incomingMessageDiv);\r\n    }, 500); // Simulate typing delay\r\n  };\r\n\r\n  const handleSuggestionClick = (message) => {\r\n    setUserMessage(message);\r\n    handleSendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-all\">\r\n      <p className=\"ai-subtitle\"> GPT AI health care</p>\r\n\r\n      {/* AI Suggestion list */}\r\n      <ul className=\"ai-suggestion-list\">\r\n        <li className=\"ai-suggestion\" onClick={() => handleSuggestionClick(\"Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?\")}>\r\n          <h4 className=\"ai-text\">Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?</h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">draw</span>\r\n        </li>\r\n        <li className=\"ai-suggestion\" onClick={() => handleSuggestionClick(\"Nếu tôi bị sổ mũi thì phải xử lý như thế nào ?\")}>\r\n          <h4 className=\"ai-text\">Nếu tôi bị sổ mũi thì phải xử lý như thế nào ?</h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">lightbulb</span>\r\n        </li>\r\n        <li className=\"ai-suggestion\" onClick={() => handleSuggestionClick(\"Bạn có thể tư vấn giúp tôi kế hoạch giảm cân ?\")}>\r\n          <h4 className=\"ai-text\">Bạn có thể tư vấn giúp tôi kế hoạch giảm cân ?</h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">explore</span>\r\n        </li>\r\n        <li className=\"ai-suggestion\" onClick={() => handleSuggestionClick(\"Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\")}>\r\n          <h4 className=\"ai-text\">Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.</h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">code</span>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* AI Chat List / Container */}\r\n      <div className=\"ai-chat-list\">\r\n        {chatHistory.map((message, index) => (\r\n          <div key={index} className={`message ${message.isUserMessage ? \"outgoing\" : \"incoming\"} ${message.isLoading ? \"loading\" : \"\"}`}>\r\n            <div className=\"message-content\">\r\n              <img className=\"avatar\" src={message.isUserMessage ? \"https://i.imgur.com/3xFFbKJ.jpeg\" : \"https://img.icons8.com/?size=512&id=iGqse5s20iex&format=png\"} alt=\"Avatar\" />\r\n              <p className=\"text\">{message.content}</p>\r\n              {message.isLoading && (\r\n                <div className=\"loading-indicator\">\r\n                  <div className=\"loading-bar\"></div>\r\n                  <div className=\"loading-bar\"></div>\r\n                  <div className=\"loading-bar\"></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* AI Typing Area */}\r\n      <div className=\"ai-typing-area\">\r\n        <form action=\"#\" className=\"ai-typing-form\" onSubmit={(e) => { e.preventDefault(); handleSendMessage(); }}>\r\n          <div className=\"ai-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              value={userMessage}\r\n              placeholder=\"Nhập câu hỏi của bạn tại đây...\"\r\n              className=\"ai-typing-input\"\r\n              onChange={(e) => setUserMessage(e.target.value)}\r\n              required\r\n            />\r\n            <button id=\"send-ai-message-button\" className=\"ai-icon material-symbols-rounded\">\r\n              send\r\n            </button>\r\n          </div>\r\n          <div className=\"ai-action-buttons\">\r\n            <span id=\"theme-ai-toggle-button\" className=\"ai-icon material-symbols-rounded\" onClick={handleToggleTheme}>\r\n              {theme === 'light_mode' ? 'dark_mode' : 'light_mode'}\r\n            </span>\r\n            <span id=\"delete-ai-chat-button\" className=\"ai-icon material-symbols-rounded\" onClick={handleDeleteChats}>\r\n              delete\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatAIApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}