{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u1ED9i Dung Tr\\xEAn Tr\\u01B0\\u1EDDng\\\\WebCoolmate\\\\client\\\\src\\\\components\\\\Message\\\\AIchat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatAIApp = () => {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [isResponseGenerating, setIsResponseGenerating] = useState(false);\n  const [savedChats, setSavedChats] = useState('');\n  const [isLightMode, setIsLightMode] = useState(localStorage.getItem(\"themeColor\") === \"light_mode\");\n  const chatContainerRef = useRef(null);\n  const typingInputRef = useRef(null);\n  const API_KEY = \"AIzaSyCVqQlTN7ylrRha-gzAdggRmsSPpyNfm0A\";\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\n  useEffect(() => {\n    loadDataFromLocalstorage();\n  }, []);\n  const loadDataFromLocalstorage = () => {\n    const savedChats = localStorage.getItem(\"saved-chats\") || '';\n    setSavedChats(savedChats);\n    if (chatContainerRef.current) {\n      chatContainerRef.current.innerHTML = savedChats;\n      chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\n    }\n  };\n  const createMessageElement = (content, ...classes) => {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"message\", ...classes);\n    div.innerHTML = content;\n    return div;\n  };\n  const showTypingEffect = (text, textElement, incomingMessageDiv) => {\n    const words = text.split(\" \");\n    let currentWordIndex = 0;\n    const typingInterval = setInterval(() => {\n      textElement.innerText += (currentWordIndex === 0 ? \"\" : \" \") + words[currentWordIndex++];\n      incomingMessageDiv.querySelector(\".icon\").classList.add(\"hide\");\n      if (currentWordIndex === words.length) {\n        clearInterval(typingInterval);\n        setIsResponseGenerating(false);\n        incomingMessageDiv.querySelector(\".icon\").classList.remove(\"hide\");\n        localStorage.setItem(\"saved-chats\", chatContainerRef.current.innerHTML);\n      }\n      chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\n    }, 75);\n  };\n  const generateAPIResponse = async incomingMessageDiv => {\n    const textElement = incomingMessageDiv.querySelector(\".text\");\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            role: \"user\",\n            parts: [{\n              text: userMessage\n            }]\n          }]\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error.message);\n      const apiResponse = data === null || data === void 0 ? void 0 : data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, \"$1\");\n      showTypingEffect(apiResponse, textElement, incomingMessageDiv);\n    } catch (error) {\n      setIsResponseGenerating(false);\n      textElement.innerText = error.message;\n      incomingMessageDiv.classList.add(\"error\");\n    } finally {\n      incomingMessageDiv.classList.remove(\"loading\");\n    }\n  };\n  const showLoadingAnimation = () => {\n    const html = `<div class=\"message-content\">\n                    <img style=\"background-color:#fff\" class=\"avatar\" src=\"https://img.icons8.com/?size=512&id=iGqse5s20iex&format=png\" alt=\"AI avatar\">\n                    <p class=\"text\"></p>\n                    <div class=\"loading-indicator\">\n                      <div class=\"loading-bar\"></div>\n                      <div class=\"loading-bar\"></div>\n                      <div class=\"loading-bar\"></div>\n                    </div>\n                  </div>\n                  <span onClick=\"copyMessage(this)\" class=\"icon material-symbols-rounded\">content_copy</span>`;\n    const incomingMessageDiv = createMessageElement(html, \"incoming\", \"loading\");\n    chatContainerRef.current.appendChild(incomingMessageDiv);\n    chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\n    generateAPIResponse(incomingMessageDiv);\n  };\n  const handleOutgoingChat = e => {\n    e.preventDefault();\n    if (!userMessage || isResponseGenerating) return;\n    setIsResponseGenerating(true);\n    const html = `<div class=\"message-content\">\n                    <img class=\"avatar\" src=\"https://i.imgur.com/3xFFbKJ.jpeg\" alt=\"User avatar\">\n                    <p class=\"text\">${userMessage}</p>\n                  </div>`;\n    const outgoingMessageDiv = createMessageElement(html, \"outgoing\");\n    chatContainerRef.current.appendChild(outgoingMessageDiv);\n    setUserMessage('');\n    document.body.classList.add(\"hide-header\");\n    chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\n    setTimeout(showLoadingAnimation, 500);\n  };\n  const toggleTheme = () => {\n    const isLightMode = !document.body.classList.toggle(\"light_mode\");\n    localStorage.setItem(\"themeColor\", isLightMode ? \"light_mode\" : \"dark_mode\");\n    setIsLightMode(isLightMode);\n  };\n  const deleteChats = () => {\n    if (window.confirm(\"Sau khi xóa sẽ không thể hoàn tác. Bạn có muốn xóa toàn bộ đoạn chat này về mặc định?\")) {\n      localStorage.removeItem(\"saved-chats\");\n      loadDataFromLocalstorage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-all\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ai-subtitle\",\n      children: \" GPT AI health care\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ai-suggestion-list\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => setUserMessage(\"Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"N\\u1EBFu t\\xF4i b\\u1ECB ho c\\u1EA7n \\u0111i\\u1EC1u tr\\u1ECB nh\\u01B0 th\\u1EBF n\\xE0o \\u0111\\u1EC3 t\\xECnh h\\xECnh s\\u1EE9c kh\\u1ECFe \\u0111\\u01B0\\u1EE3c c\\u1EA3i thi\\u1EC7n t\\u1ED1t h\\u01A1n ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-chat-list\",\n      ref: chatContainerRef,\n      dangerouslySetInnerHTML: {\n        __html: savedChats\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-typing-area\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOutgoingChat,\n        className: \"ai-typing-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y...\",\n            className: \"ai-typing-input\",\n            value: userMessage,\n            onChange: e => setUserMessage(e.target.value),\n            required: true,\n            ref: typingInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ai-icon material-symbols-rounded\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: toggleTheme,\n            className: \"ai-icon material-symbols-rounded\",\n            children: isLightMode ? \"dark_mode\" : \"light_mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: deleteChats,\n            className: \"ai-icon material-symbols-rounded\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatAIApp, \"ZcDITWPr1grLwW+EqAVhkJXxvHc=\");\n_c = ChatAIApp;\nexport default ChatAIApp;\nvar _c;\n$RefreshReg$(_c, \"ChatAIApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatAIApp","_s","userMessage","setUserMessage","isResponseGenerating","setIsResponseGenerating","savedChats","setSavedChats","isLightMode","setIsLightMode","localStorage","getItem","chatContainerRef","typingInputRef","API_KEY","API_URL","loadDataFromLocalstorage","current","innerHTML","scrollTo","scrollHeight","createMessageElement","content","classes","div","document","createElement","classList","add","showTypingEffect","text","textElement","incomingMessageDiv","words","split","currentWordIndex","typingInterval","setInterval","innerText","querySelector","length","clearInterval","remove","setItem","generateAPIResponse","response","fetch","method","headers","body","JSON","stringify","contents","role","parts","data","json","ok","Error","error","message","apiResponse","candidates","replace","showLoadingAnimation","html","appendChild","handleOutgoingChat","e","preventDefault","outgoingMessageDiv","setTimeout","toggleTheme","toggle","deleteChats","window","confirm","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","dangerouslySetInnerHTML","__html","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/Nội Dung Trên Trường/WebCoolmate/client/src/components/Message/AIchat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst ChatAIApp = () => {\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [isResponseGenerating, setIsResponseGenerating] = useState(false);\r\n  const [savedChats, setSavedChats] = useState('');\r\n  const [isLightMode, setIsLightMode] = useState(\r\n    localStorage.getItem(\"themeColor\") === \"light_mode\"\r\n  );\r\n\r\n  const chatContainerRef = useRef(null);\r\n  const typingInputRef = useRef(null);\r\n\r\n  const API_KEY = \"AIzaSyCVqQlTN7ylrRha-gzAdggRmsSPpyNfm0A\";\r\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\r\n\r\n  useEffect(() => {\r\n    loadDataFromLocalstorage();\r\n  }, []);\r\n\r\n  const loadDataFromLocalstorage = () => {\r\n    const savedChats = localStorage.getItem(\"saved-chats\") || '';\r\n    setSavedChats(savedChats);\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.innerHTML = savedChats;\r\n      chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\r\n    }\r\n  };\r\n\r\n  const createMessageElement = (content, ...classes) => {\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"message\", ...classes);\r\n    div.innerHTML = content;\r\n    return div;\r\n  };\r\n\r\n  const showTypingEffect = (text, textElement, incomingMessageDiv) => {\r\n    const words = text.split(\" \");\r\n    let currentWordIndex = 0;\r\n\r\n    const typingInterval = setInterval(() => {\r\n      textElement.innerText += (currentWordIndex === 0 ? \"\" : \" \") + words[currentWordIndex++];\r\n      incomingMessageDiv.querySelector(\".icon\").classList.add(\"hide\");\r\n\r\n      if (currentWordIndex === words.length) {\r\n        clearInterval(typingInterval);\r\n        setIsResponseGenerating(false);\r\n        incomingMessageDiv.querySelector(\".icon\").classList.remove(\"hide\");\r\n        localStorage.setItem(\"saved-chats\", chatContainerRef.current.innerHTML);\r\n      }\r\n      chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\r\n    }, 75);\r\n  };\r\n\r\n  const generateAPIResponse = async (incomingMessageDiv) => {\r\n    const textElement = incomingMessageDiv.querySelector(\".text\");\r\n\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [\r\n            {\r\n              role: \"user\",\r\n              parts: [{ text: userMessage }],\r\n            },\r\n          ],\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.error.message);\r\n\r\n      const apiResponse = data?.candidates[0].content.parts[0].text.replace(\r\n        /\\*\\*(.*?)\\*\\*/g,\r\n        \"$1\"\r\n      );\r\n      showTypingEffect(apiResponse, textElement, incomingMessageDiv);\r\n    } catch (error) {\r\n      setIsResponseGenerating(false);\r\n      textElement.innerText = error.message;\r\n      incomingMessageDiv.classList.add(\"error\");\r\n    } finally {\r\n      incomingMessageDiv.classList.remove(\"loading\");\r\n    }\r\n  };\r\n\r\n  const showLoadingAnimation = () => {\r\n    const html = `<div class=\"message-content\">\r\n                    <img style=\"background-color:#fff\" class=\"avatar\" src=\"https://img.icons8.com/?size=512&id=iGqse5s20iex&format=png\" alt=\"AI avatar\">\r\n                    <p class=\"text\"></p>\r\n                    <div class=\"loading-indicator\">\r\n                      <div class=\"loading-bar\"></div>\r\n                      <div class=\"loading-bar\"></div>\r\n                      <div class=\"loading-bar\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <span onClick=\"copyMessage(this)\" class=\"icon material-symbols-rounded\">content_copy</span>`;\r\n\r\n    const incomingMessageDiv = createMessageElement(html, \"incoming\", \"loading\");\r\n    chatContainerRef.current.appendChild(incomingMessageDiv);\r\n    chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\r\n    generateAPIResponse(incomingMessageDiv);\r\n  };\r\n\r\n  const handleOutgoingChat = (e) => {\r\n    e.preventDefault();\r\n    if (!userMessage || isResponseGenerating) return;\r\n\r\n    setIsResponseGenerating(true);\r\n\r\n    const html = `<div class=\"message-content\">\r\n                    <img class=\"avatar\" src=\"https://i.imgur.com/3xFFbKJ.jpeg\" alt=\"User avatar\">\r\n                    <p class=\"text\">${userMessage}</p>\r\n                  </div>`;\r\n\r\n    const outgoingMessageDiv = createMessageElement(html, \"outgoing\");\r\n    chatContainerRef.current.appendChild(outgoingMessageDiv);\r\n\r\n    setUserMessage('');\r\n    document.body.classList.add(\"hide-header\");\r\n    chatContainerRef.current.scrollTo(0, chatContainerRef.current.scrollHeight);\r\n    setTimeout(showLoadingAnimation, 500);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    const isLightMode = !document.body.classList.toggle(\"light_mode\");\r\n    localStorage.setItem(\"themeColor\", isLightMode ? \"light_mode\" : \"dark_mode\");\r\n    setIsLightMode(isLightMode);\r\n  };\r\n\r\n  const deleteChats = () => {\r\n    if (window.confirm(\"Sau khi xóa sẽ không thể hoàn tác. Bạn có muốn xóa toàn bộ đoạn chat này về mặc định?\")) {\r\n      localStorage.removeItem(\"saved-chats\");\r\n      loadDataFromLocalstorage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='ai-all'>\r\n      <p className=\"ai-subtitle\"> GPT AI health care</p>\r\n      <ul className=\"ai-suggestion-list\">\r\n        <li className=\"ai-suggestion\" onClick={() => setUserMessage(\"Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?\")}>\r\n          <h4 className=\"ai-text\">\r\n            Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?\r\n          </h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">draw</span>\r\n        </li>\r\n        {/* Các mục đề xuất khác */}\r\n      </ul>\r\n      <div className=\"ai-chat-list\" ref={chatContainerRef} dangerouslySetInnerHTML={{ __html: savedChats }}></div>\r\n      <div className=\"ai-typing-area\">\r\n        <form onSubmit={handleOutgoingChat} className=\"ai-typing-form\">\r\n          <div className=\"ai-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nhập câu hỏi của bạn tại đây...\"\r\n              className=\"ai-typing-input\"\r\n              value={userMessage}\r\n              onChange={(e) => setUserMessage(e.target.value)}\r\n              required\r\n              ref={typingInputRef}\r\n            />\r\n            <button className=\"ai-icon material-symbols-rounded\">send</button>\r\n          </div>\r\n          <div className=\"ai-action-buttons\">\r\n            <span onClick={toggleTheme} className=\"ai-icon material-symbols-rounded\">\r\n              {isLightMode ? \"dark_mode\" : \"light_mode\"}\r\n            </span>\r\n            <span onClick={deleteChats} className=\"ai-icon material-symbols-rounded\">\r\n              delete\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatAIApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}