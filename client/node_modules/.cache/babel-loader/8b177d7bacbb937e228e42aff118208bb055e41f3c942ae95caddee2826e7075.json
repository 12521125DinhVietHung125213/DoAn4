{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u1ED9i Dung Tr\\xEAn Tr\\u01B0\\u1EDDng\\\\WebCoolmate\\\\client\\\\src\\\\components\\\\Message\\\\AIchat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./AIchat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatAIApp = () => {\n  _s();\n  const [chats, setChats] = useState(() => {\n    const savedChats = localStorage.getItem(\"ai-saved-chats\");\n    return savedChats ? JSON.parse(savedChats) : [];\n  });\n  const [theme, setTheme] = useState(() => {\n    return localStorage.getItem(\"ai-themeColor\") || \"dark_mode\";\n  });\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(true); // Trạng thái hiển thị danh sách gợi ý\n\n  const API_KEY = \"AIzaSyCVQQlTN7ylrRha-GZAdggRmSSPpyNff0A\";\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\n  useEffect(() => {\n    localStorage.setItem(\"ai-saved-chats\", JSON.stringify(chats));\n  }, [chats]);\n  useEffect(() => {\n    localStorage.setItem(\"ai-themeColor\", theme);\n    document.body.classList.toggle(\"light_mode\", theme === \"light_mode\");\n  }, [theme]);\n  const handleSendMessage = async message => {\n    if (!message.trim() || isLoading) return;\n    setChats(prevChats => [...prevChats, {\n      text: message,\n      type: \"outgoing\"\n    }]);\n    setUserMessage(\"\");\n    setIsLoading(true);\n    try {\n      var _data$candidates, _data$candidates$;\n      const response = await fetch(\"https://generativelanguage.googleapis.com/v1beta2/models/text-bison-001:generateText?key=\" + API_KEY, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: {\n            text: message\n          },\n          temperature: 0.7,\n          candidateCount: 1\n        })\n      });\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        console.error(\"Lỗi API:\", errorData);\n        throw new Error((errorData === null || errorData === void 0 ? void 0 : (_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || \"Yêu cầu không thành công, thử lại sau.\");\n      }\n      const data = await response.json();\n      const aiMessage = r(data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : _data$candidates$.output) || \"AI không có phản hồi.\";\n      setChats(prevChats => [...prevChats, {\n        text: aiMessage,\n        type: \"incoming\"\n      }]);\n    } catch (error) {\n      console.error(\"Lỗi gửi tin nhắn:\", error.message);\n      setChats(prevChats => [...prevChats, {\n        text: \"Không thể phản hồi, vui lòng thử lại.\",\n        type: \"incoming\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSuggestionClick = text => {\n    setUserMessage(text);\n    handleSendMessage(text);\n    setShowSuggestions(false); // Ẩn danh sách gợi ý\n  };\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === \"dark_mode\" ? \"light_mode\" : \"dark_mode\");\n  };\n  const deleteAllChats = () => {\n    if (window.confirm(\"Bạn có chắc chắn muốn xóa toàn bộ lịch sử chat?\")) {\n      setShowSuggestions(true);\n      setChats([]);\n      localStorage.removeItem(\"ai-saved-chats\");\n    }\n  };\n  function removeAsterisks(text) {\n    return text.replace(/\\*/g, \"\").trim(); // Loại bỏ dấu * và cắt khoảng trắng thừa\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"ai-chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-all\",\n      children: [showSuggestions &&\n      /*#__PURE__*/\n      // Hiển thị gợi ý nếu `showSuggestions` là true\n      _jsxDEV(\"ul\", {\n        className: \"ai-suggestion-list\",\n        children: [\"Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn?\", \"Nếu tôi bị sổ mũi thì phải xử lý như thế nào?\", \"Bạn có thể tư vấn giúp tôi kế hoạch giảm cân?\", \"Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\"].map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ai-suggestion\",\n          onClick: () => handleSuggestionClick(suggestion),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"ai-text\",\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ai-icon material-symbols-rounded\",\n            children: \"draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-chat-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-chat-grid\",\n          children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `ai-message ${chat.type === \"outgoing\" ? \"outgoing\" : \"incoming\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ai-message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"ai-avatar\",\n                src: chat.type === \"outgoing\" ? \"https://img.icons8.com/?size=100&id=ScJCfhkd77yD&format=png&color=000000\" : \"https://img.icons8.com/?size=100&id=kTuxVYRKeKEY&format=png&color=000000\",\n                alt: chat.type === \"outgoing\" ? \"User avatar\" : \"AI avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ai-text\",\n                children: chat.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), chat.type === \"incoming\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => navigator.clipboard.writeText(chat.text),\n              className: \"ai-icon material-symbols-rounded\",\n              children: \"content_copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-typing-area\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"ai-typing-form\",\n          onSubmit: e => {\n            e.preventDefault();\n            handleSendMessage(userMessage);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y...\",\n              className: \"ai-typing-input\",\n              value: userMessage,\n              onChange: e => setUserMessage(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"send-ai-message-button\",\n              className: \"ai-icon material-symbols-rounded\",\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"theme-ai-toggle-button\",\n              className: \"ai-icon material-symbols-rounded\",\n              onClick: toggleTheme,\n              children: theme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"delete-ai-chat-button\",\n              className: \"ai-icon material-symbols-rounded\",\n              onClick: deleteAllChats,\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatAIApp, \"hCyFAREWC4FhFMzJX9WW/hkbhoU=\");\n_c = ChatAIApp;\nexport default ChatAIApp;\nvar _c;\n$RefreshReg$(_c, \"ChatAIApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatAIApp","_s","chats","setChats","savedChats","localStorage","getItem","JSON","parse","theme","setTheme","userMessage","setUserMessage","isLoading","setIsLoading","showSuggestions","setShowSuggestions","API_KEY","API_URL","setItem","stringify","document","body","classList","toggle","handleSendMessage","message","trim","prevChats","text","type","_data$candidates","_data$candidates$","response","fetch","method","headers","prompt","temperature","candidateCount","ok","_errorData$error","errorData","json","console","error","Error","data","aiMessage","r","candidates","output","handleSuggestionClick","toggleTheme","prevTheme","deleteAllChats","window","confirm","removeItem","removeAsterisks","replace","id","children","className","map","suggestion","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","chat","src","alt","navigator","clipboard","writeText","onSubmit","e","preventDefault","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/Nội Dung Trên Trường/WebCoolmate/client/src/components/Message/AIchat.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./AIchat.css\";\r\n\r\nconst ChatAIApp = () => {\r\n  const [chats, setChats] = useState(() => {\r\n    const savedChats = localStorage.getItem(\"ai-saved-chats\");\r\n    return savedChats ? JSON.parse(savedChats) : [];\r\n  });\r\n  const [theme, setTheme] = useState(() => {\r\n    return localStorage.getItem(\"ai-themeColor\") || \"dark_mode\";\r\n  });\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(true); // Trạng thái hiển thị danh sách gợi ý\r\n\r\n  const API_KEY = \"AIzaSyCVQQlTN7ylrRha-GZAdggRmSSPpyNff0A\";\r\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"ai-saved-chats\", JSON.stringify(chats));\r\n  }, [chats]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"ai-themeColor\", theme);\r\n    document.body.classList.toggle(\"light_mode\", theme === \"light_mode\");\r\n  }, [theme]);\r\n\r\n  const handleSendMessage = async (message) => {\r\n    if (!message.trim() || isLoading) return;\r\n  \r\n    setChats((prevChats) => [\r\n      ...prevChats,\r\n      { text: message, type: \"outgoing\" },\r\n    ]);\r\n    setUserMessage(\"\");\r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        \"https://generativelanguage.googleapis.com/v1beta2/models/text-bison-001:generateText?key=\" + API_KEY,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            prompt: {\r\n              text: message,\r\n            },\r\n            temperature: 0.7,\r\n            candidateCount: 1,\r\n          }),\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error(\"Lỗi API:\", errorData);\r\n        throw new Error(\r\n          errorData?.error?.message || \"Yêu cầu không thành công, thử lại sau.\"\r\n        );\r\n      }\r\n  \r\n      const data = await response.json();\r\n      const aiMessage =\r\n    r(data?.candidates?.[0]?.output) || \"AI không có phản hồi.\";\r\n      setChats((prevChats) => [\r\n        ...prevChats,\r\n        { text: aiMessage, type: \"incoming\" },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Lỗi gửi tin nhắn:\", error.message);\r\n      setChats((prevChats) => [\r\n        ...prevChats,\r\n        { text: \"Không thể phản hồi, vui lòng thử lại.\", type: \"incoming\" },\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSuggestionClick = (text) => {\r\n    setUserMessage(text);\r\n    handleSendMessage(text);\r\n    setShowSuggestions(false); // Ẩn danh sách gợi ý\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"dark_mode\" ? \"light_mode\" : \"dark_mode\"));\r\n  };\r\n\r\n  const deleteAllChats = () => {\r\n    if (window.confirm(\"Bạn có chắc chắn muốn xóa toàn bộ lịch sử chat?\")) {\r\n      setShowSuggestions(true);\r\n      setChats([]);\r\n      localStorage.removeItem(\"ai-saved-chats\");\r\n    }\r\n  };\r\n\r\n  function removeAsterisks(text) {\r\n    return text.replace(/\\*/g, \"\").trim(); // Loại bỏ dấu * và cắt khoảng trắng thừa\r\n  }\r\n  \r\n  return (\r\n    <div id=\"ai-chat\">\r\n      <div className=\"ai-all\">\r\n        {/* AI Suggestion List */}\r\n        {showSuggestions && ( // Hiển thị gợi ý nếu `showSuggestions` là true\r\n          <ul className=\"ai-suggestion-list\">\r\n            {[\r\n              \"Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn?\",\r\n              \"Nếu tôi bị sổ mũi thì phải xử lý như thế nào?\",\r\n              \"Bạn có thể tư vấn giúp tôi kế hoạch giảm cân?\",\r\n              \"Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\",\r\n            ].map((suggestion, index) => (\r\n              <li\r\n                key={index}\r\n                className=\"ai-suggestion\"\r\n                onClick={() => handleSuggestionClick(suggestion)}\r\n              >\r\n                <h4 className=\"ai-text\">{suggestion}</h4>\r\n                <span className=\"ai-icon material-symbols-rounded\">draw</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n\r\n        {/* AI Chat List */}\r\n        <div className=\"ai-chat-list\">\r\n          <div className=\"ai-chat-grid\">\r\n            {chats.map((chat, index) => (\r\n              <div\r\n                key={index}\r\n                className={`ai-message ${chat.type === \"outgoing\" ? \"outgoing\" : \"incoming\"}`}\r\n              >\r\n                <div className=\"ai-message-content\">\r\n                  <img\r\n                    className=\"ai-avatar\"\r\n                    src={\r\n                      chat.type === \"outgoing\"\r\n                        ? \"https://img.icons8.com/?size=100&id=ScJCfhkd77yD&format=png&color=000000\"\r\n                        : \"https://img.icons8.com/?size=100&id=kTuxVYRKeKEY&format=png&color=000000\"\r\n                    }\r\n                    alt={chat.type === \"outgoing\" ? \"User avatar\" : \"AI avatar\"}\r\n                  />\r\n                  <p className=\"ai-text\">{chat.text}</p>\r\n                </div>\r\n                {chat.type === \"incoming\" && (\r\n                  <span\r\n                    onClick={() => navigator.clipboard.writeText(chat.text)}\r\n                    className=\"ai-icon material-symbols-rounded\"\r\n                  >\r\n                    content_copy\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* AI Typing Area */}\r\n        <div className=\"ai-typing-area\">\r\n          <form\r\n            className=\"ai-typing-form\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleSendMessage(userMessage);\r\n            }}\r\n          >\r\n            <div className=\"ai-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nhập câu hỏi của bạn tại đây...\"\r\n                className=\"ai-typing-input\"\r\n                value={userMessage}\r\n                onChange={(e) => setUserMessage(e.target.value)}\r\n                required\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                id=\"send-ai-message-button\"\r\n                className=\"ai-icon material-symbols-rounded\"\r\n              >\r\n                send\r\n              </button>\r\n            </div>\r\n            <div className=\"ai-action-buttons\">\r\n              <span\r\n                id=\"theme-ai-toggle-button\"\r\n                className=\"ai-icon material-symbols-rounded\"\r\n                onClick={toggleTheme}\r\n              >\r\n                {theme}\r\n              </span>\r\n              <span\r\n                id=\"delete-ai-chat-button\"\r\n                className=\"ai-icon material-symbols-rounded\"\r\n                onClick={deleteAllChats}\r\n              >\r\n                delete\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatAIApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,MAAM;IACvC,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACzD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EACF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,MAAM;IACvC,OAAOS,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,WAAW;EAC7D,CAAC,CAAC;EACF,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9D,MAAMqB,OAAO,GAAG,yCAAyC;EACzD,MAAMC,OAAO,GAAI,sFAAqFD,OAAQ,EAAC;EAE/GpB,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACc,OAAO,CAAC,gBAAgB,EAAEZ,IAAI,CAACa,SAAS,CAAClB,KAAK,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXL,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACc,OAAO,CAAC,eAAe,EAAEV,KAAK,CAAC;IAC5CY,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,EAAEf,KAAK,KAAK,YAAY,CAAC;EACtE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMgB,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3C,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,IAAId,SAAS,EAAE;IAElCV,QAAQ,CAAEyB,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ;MAAEC,IAAI,EAAEH,OAAO;MAAEI,IAAI,EAAE;IAAW,CAAC,CACpC,CAAC;IACFlB,cAAc,CAAC,EAAE,CAAC;IAClBE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MAAA,IAAAiB,gBAAA,EAAAC,iBAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2FAA2F,GAAGjB,OAAO,EACrG;QACEkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDd,IAAI,EAAEf,IAAI,CAACa,SAAS,CAAC;UACnBiB,MAAM,EAAE;YACNR,IAAI,EAAEH;UACR,CAAC;UACDY,WAAW,EAAE,GAAG;UAChBC,cAAc,EAAE;QAClB,CAAC;MACH,CACF,CAAC;MAED,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAAA,IAAAC,gBAAA;QAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCC,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEH,SAAS,CAAC;QACpC,MAAM,IAAII,KAAK,CACb,CAAAJ,SAAS,aAATA,SAAS,wBAAAD,gBAAA,GAATC,SAAS,CAAEG,KAAK,cAAAJ,gBAAA,uBAAhBA,gBAAA,CAAkBf,OAAO,KAAI,wCAC/B,CAAC;MACH;MAEA,MAAMqB,IAAI,GAAG,MAAMd,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,MAAMK,SAAS,GACjBC,CAAC,CAACF,IAAI,aAAJA,IAAI,wBAAAhB,gBAAA,GAAJgB,IAAI,CAAEG,UAAU,cAAAnB,gBAAA,wBAAAC,iBAAA,GAAhBD,gBAAA,CAAmB,CAAC,CAAC,cAAAC,iBAAA,uBAArBA,iBAAA,CAAuBmB,MAAM,CAAC,IAAI,uBAAuB;MACzDhD,QAAQ,CAAEyB,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ;QAAEC,IAAI,EAAEmB,SAAS;QAAElB,IAAI,EAAE;MAAW,CAAC,CACtC,CAAC;IACJ,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACnB,OAAO,CAAC;MACjDvB,QAAQ,CAAEyB,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ;QAAEC,IAAI,EAAE,uCAAuC;QAAEC,IAAI,EAAE;MAAW,CAAC,CACpE,CAAC;IACJ,CAAC,SAAS;MACRhB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAGD,MAAMsC,qBAAqB,GAAIvB,IAAI,IAAK;IACtCjB,cAAc,CAACiB,IAAI,CAAC;IACpBJ,iBAAiB,CAACI,IAAI,CAAC;IACvBb,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMqC,WAAW,GAAGA,CAAA,KAAM;IACxB3C,QAAQ,CAAE4C,SAAS,IAAMA,SAAS,KAAK,WAAW,GAAG,YAAY,GAAG,WAAY,CAAC;EACnF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,MAAM,CAACC,OAAO,CAAC,iDAAiD,CAAC,EAAE;MACrEzC,kBAAkB,CAAC,IAAI,CAAC;MACxBb,QAAQ,CAAC,EAAE,CAAC;MACZE,YAAY,CAACqD,UAAU,CAAC,gBAAgB,CAAC;IAC3C;EACF,CAAC;EAED,SAASC,eAAeA,CAAC9B,IAAI,EAAE;IAC7B,OAAOA,IAAI,CAAC+B,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACjC,IAAI,CAAC,CAAC,CAAC,CAAC;EACzC;EAEA,oBACE5B,OAAA;IAAK8D,EAAE,EAAC,SAAS;IAAAC,QAAA,eACf/D,OAAA;MAAKgE,SAAS,EAAC,QAAQ;MAAAD,QAAA,GAEpB/C,eAAe;MAAA;MAAM;MACpBhB,OAAA;QAAIgE,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAC/B,CACC,sFAAsF,EACtF,+CAA+C,EAC/C,+CAA+C,EAC/C,qEAAqE,CACtE,CAACE,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACtBnE,OAAA;UAEEgE,SAAS,EAAC,eAAe;UACzBI,OAAO,EAAEA,CAAA,KAAMf,qBAAqB,CAACa,UAAU,CAAE;UAAAH,QAAA,gBAEjD/D,OAAA;YAAIgE,SAAS,EAAC,SAAS;YAAAD,QAAA,EAAEG;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzCxE,OAAA;YAAMgE,SAAS,EAAC,kCAAkC;YAAAD,QAAA,EAAC;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GALzDL,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL,eAGDxE,OAAA;QAAKgE,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC3B/D,OAAA;UAAKgE,SAAS,EAAC,cAAc;UAAAD,QAAA,EAC1B5D,KAAK,CAAC8D,GAAG,CAAC,CAACQ,IAAI,EAAEN,KAAK,kBACrBnE,OAAA;YAEEgE,SAAS,EAAG,cAAaS,IAAI,CAAC1C,IAAI,KAAK,UAAU,GAAG,UAAU,GAAG,UAAW,EAAE;YAAAgC,QAAA,gBAE9E/D,OAAA;cAAKgE,SAAS,EAAC,oBAAoB;cAAAD,QAAA,gBACjC/D,OAAA;gBACEgE,SAAS,EAAC,WAAW;gBACrBU,GAAG,EACDD,IAAI,CAAC1C,IAAI,KAAK,UAAU,GACpB,0EAA0E,GAC1E,0EACL;gBACD4C,GAAG,EAAEF,IAAI,CAAC1C,IAAI,KAAK,UAAU,GAAG,aAAa,GAAG;cAAY;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7D,CAAC,eACFxE,OAAA;gBAAGgE,SAAS,EAAC,SAAS;gBAAAD,QAAA,EAAEU,IAAI,CAAC3C;cAAI;gBAAAuC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,EACLC,IAAI,CAAC1C,IAAI,KAAK,UAAU,iBACvB/B,OAAA;cACEoE,OAAO,EAAEA,CAAA,KAAMQ,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,IAAI,CAAC3C,IAAI,CAAE;cACxDkC,SAAS,EAAC,kCAAkC;cAAAD,QAAA,EAC7C;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP;UAAA,GAtBIL,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuBP,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNxE,OAAA;QAAKgE,SAAS,EAAC,gBAAgB;QAAAD,QAAA,eAC7B/D,OAAA;UACEgE,SAAS,EAAC,gBAAgB;UAC1Be,QAAQ,EAAGC,CAAC,IAAK;YACfA,CAAC,CAACC,cAAc,CAAC,CAAC;YAClBvD,iBAAiB,CAACd,WAAW,CAAC;UAChC,CAAE;UAAAmD,QAAA,gBAEF/D,OAAA;YAAKgE,SAAS,EAAC,kBAAkB;YAAAD,QAAA,gBAC/B/D,OAAA;cACE+B,IAAI,EAAC,MAAM;cACXmD,WAAW,EAAC,qEAAiC;cAC7ClB,SAAS,EAAC,iBAAiB;cAC3BmB,KAAK,EAAEvE,WAAY;cACnBwE,QAAQ,EAAGJ,CAAC,IAAKnE,cAAc,CAACmE,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;cAChDG,QAAQ;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACFxE,OAAA;cACE+B,IAAI,EAAC,QAAQ;cACb+B,EAAE,EAAC,wBAAwB;cAC3BE,SAAS,EAAC,kCAAkC;cAAAD,QAAA,EAC7C;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNxE,OAAA;YAAKgE,SAAS,EAAC,mBAAmB;YAAAD,QAAA,gBAChC/D,OAAA;cACE8D,EAAE,EAAC,wBAAwB;cAC3BE,SAAS,EAAC,kCAAkC;cAC5CI,OAAO,EAAEd,WAAY;cAAAS,QAAA,EAEpBrD;YAAK;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACPxE,OAAA;cACE8D,EAAE,EAAC,uBAAuB;cAC1BE,SAAS,EAAC,kCAAkC;cAC5CI,OAAO,EAAEZ,cAAe;cAAAO,QAAA,EACzB;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtE,EAAA,CA7MID,SAAS;AAAAsF,EAAA,GAATtF,SAAS;AA+Mf,eAAeA,SAAS;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}