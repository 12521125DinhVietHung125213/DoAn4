{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u1ED9i Dung Tr\\xEAn Tr\\u01B0\\u1EDDng\\\\WebCoolmate\\\\client\\\\src\\\\components\\\\Message\\\\AIchat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatAIApp = () => {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [isResponseGenerating, setIsResponseGenerating] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [theme, setTheme] = useState(localStorage.getItem(\"themeColor\") || \"dark_mode\");\n  const API_KEY = \"AIzaSyCVqQlTN7ylrRha-gzAdggRmsSPpyNfm0A\"; // Your API key here\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\n\n  // Load previous chats from localStorage\n  useEffect(() => {\n    const savedChats = localStorage.getItem(\"saved-chats\");\n    if (savedChats) {\n      setChatHistory(JSON.parse(savedChats));\n    }\n  }, []);\n\n  // Toggle theme and save to localStorage\n  const toggleTheme = () => {\n    const newTheme = theme === 'light_mode' ? 'dark_mode' : 'light_mode';\n    setTheme(newTheme);\n    localStorage.setItem(\"themeColor\", newTheme);\n  };\n\n  // Show typing effect for AI response\n  const showTypingEffect = (text, incomingMessageDiv) => {\n    const words = text.split(\" \");\n    let currentWordIndex = 0;\n    const typingInterval = setInterval(() => {\n      // Append each word to the text element with a space\n      incomingMessageDiv.text += (currentWordIndex === 0 ? \"\" : \" \") + words[currentWordIndex++];\n\n      // If all words are displayed\n      if (currentWordIndex === words.length) {\n        clearInterval(typingInterval);\n        setIsResponseGenerating(false);\n        localStorage.setItem(\"saved-chats\", JSON.stringify(chatHistory)); // Save chats to local storage\n      }\n    }, 75);\n  };\n\n  // Fetch response from the API based on user message\n  const generateAPIResponse = async () => {\n    setIsResponseGenerating(true);\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            role: \"user\",\n            parts: [{\n              text: userMessage\n            }]\n          }]\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API returned an error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data && data.candidates && data.candidates[0].content) {\n        const apiResponse = data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, \"$1\");\n        setChatHistory(prev => [...prev, {\n          text: userMessage,\n          type: 'outgoing'\n        }]);\n        setChatHistory(prev => [...prev, {\n          text: apiResponse,\n          type: 'incoming'\n        }]);\n      } else {\n        throw new Error('Unexpected response format');\n      }\n    } catch (error) {\n      setIsResponseGenerating(false);\n      setChatHistory(prev => [...prev, {\n        text: error.message,\n        type: 'incoming'\n      }]);\n    }\n  };\n  const handleMessageSend = event => {\n    event.preventDefault();\n    if (userMessage.trim() && !isResponseGenerating) {\n      setChatHistory(prev => [...prev, {\n        text: userMessage,\n        type: 'outgoing'\n      }]);\n      setUserMessage('');\n      generateAPIResponse();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ai-all ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ai-subtitle\",\n      children: \"GPT AI Health Care\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ai-suggestion-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => setUserMessage(\"Nếu tôi bị ho cần điều trị như thế nào?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"N\\u1EBFu t\\xF4i b\\u1ECB ho c\\u1EA7n \\u0111i\\u1EC1u tr\\u1ECB nh\\u01B0 th\\u1EBF n\\xE0o \\u0111\\u1EC3 t\\xECnh h\\xECnh s\\u1EE9c kh\\u1ECFe \\u0111\\u01B0\\u1EE3c c\\u1EA3i thi\\u1EC7n t\\u1ED1t h\\u01A1n ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => setUserMessage(\"Nếu tôi bị sổ mũi thì phải xử lý như thế nào ?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"N\\u1EBFu t\\xF4i b\\u1ECB s\\u1ED5 m\\u0169i th\\xEC ph\\u1EA3i x\\u1EED l\\xFD nh\\u01B0 th\\u1EBF n\\xE0o ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"lightbulb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => setUserMessage(\"Bạn có thể tư vấn giúp tôi kế hoạch giảm cân ?\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"B\\u1EA1n c\\xF3 th\\u1EC3 t\\u01B0 v\\u1EA5n gi\\xFAp t\\xF4i k\\u1EBF ho\\u1EA1ch gi\\u1EA3m c\\xE2n ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"explore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ai-suggestion\",\n        onClick: () => setUserMessage(\"Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ai-text\",\n          children: \"T\\u01B0 v\\u1EA5n th\\xF3i quen sinh ho\\u1EA1t l\\xE0nh m\\u1EA1nh gi\\xFAp s\\u1EE9c kh\\u1ECFe tr\\u1EDF n\\xEAn t\\u1ED1t h\\u01A1n.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon material-symbols-rounded\",\n          children: \"code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-chat-list\",\n      children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-typing-area\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMessageSend,\n        className: \"ai-typing-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userMessage,\n            onChange: e => setUserMessage(e.target.value),\n            placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y...\",\n            className: \"ai-typing-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"send-ai-message-button\",\n            className: \"ai-icon material-symbols-rounded\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"theme-ai-toggle-button\",\n            onClick: toggleTheme,\n            className: \"ai-icon material-symbols-rounded\",\n            children: theme === \"light_mode\" ? \"dark_mode\" : \"light_mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"delete-ai-chat-button\",\n            className: \"ai-icon material-symbols-rounded\",\n            onClick: () => {\n              localStorage.removeItem(\"saved-chats\");\n              setChatHistory([]);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatAIApp, \"ZKkP68lAUvZcPfhiEhfrEjaqB/U=\");\n_c = ChatAIApp;\nexport default ChatAIApp;\nvar _c;\n$RefreshReg$(_c, \"ChatAIApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatAIApp","_s","userMessage","setUserMessage","isResponseGenerating","setIsResponseGenerating","chatHistory","setChatHistory","theme","setTheme","localStorage","getItem","API_KEY","API_URL","savedChats","JSON","parse","toggleTheme","newTheme","setItem","showTypingEffect","text","incomingMessageDiv","words","split","currentWordIndex","typingInterval","setInterval","length","clearInterval","stringify","generateAPIResponse","response","fetch","method","headers","body","contents","role","parts","ok","Error","statusText","data","json","candidates","content","apiResponse","replace","prev","type","error","message","handleMessageSend","event","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","onSubmit","value","onChange","e","target","placeholder","required","id","removeItem","_c","$RefreshReg$"],"sources":["D:/Nội Dung Trên Trường/WebCoolmate/client/src/components/Message/AIchat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChatAIApp = () => {\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [isResponseGenerating, setIsResponseGenerating] = useState(false);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [theme, setTheme] = useState(localStorage.getItem(\"themeColor\") || \"dark_mode\");\r\n\r\n  const API_KEY = \"AIzaSyCVqQlTN7ylrRha-gzAdggRmsSPpyNfm0A\"; // Your API key here\r\n  const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${API_KEY}`;\r\n\r\n  // Load previous chats from localStorage\r\n  useEffect(() => {\r\n    const savedChats = localStorage.getItem(\"saved-chats\");\r\n    if (savedChats) {\r\n      setChatHistory(JSON.parse(savedChats));\r\n    }\r\n  }, []);\r\n\r\n  // Toggle theme and save to localStorage\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light_mode' ? 'dark_mode' : 'light_mode';\r\n    setTheme(newTheme);\r\n    localStorage.setItem(\"themeColor\", newTheme);\r\n  };\r\n\r\n  // Show typing effect for AI response\r\n  const showTypingEffect = (text, incomingMessageDiv) => {\r\n    const words = text.split(\" \");\r\n    let currentWordIndex = 0;\r\n\r\n    const typingInterval = setInterval(() => {\r\n      // Append each word to the text element with a space\r\n      incomingMessageDiv.text += (currentWordIndex === 0 ? \"\" : \" \") + words[currentWordIndex++];\r\n      \r\n      // If all words are displayed\r\n      if (currentWordIndex === words.length) {\r\n        clearInterval(typingInterval);\r\n        setIsResponseGenerating(false);\r\n        localStorage.setItem(\"saved-chats\", JSON.stringify(chatHistory)); // Save chats to local storage\r\n      }\r\n    }, 75);\r\n  };\r\n\r\n  // Fetch response from the API based on user message\r\n  const generateAPIResponse = async () => {\r\n    setIsResponseGenerating(true);\r\n\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [\r\n            {\r\n              role: \"user\",\r\n              parts: [{ text: userMessage }],\r\n            },\r\n          ],\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`API returned an error: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data && data.candidates && data.candidates[0].content) {\r\n        const apiResponse = data.candidates[0].content.parts[0].text.replace(\r\n          /\\*\\*(.*?)\\*\\*/g,\r\n          \"$1\"\r\n        );\r\n        setChatHistory(prev => [...prev, { text: userMessage, type: 'outgoing' }]);\r\n        setChatHistory(prev => [...prev, { text: apiResponse, type: 'incoming' }]);\r\n      } else {\r\n        throw new Error('Unexpected response format');\r\n      }\r\n    } catch (error) {\r\n      setIsResponseGenerating(false);\r\n      setChatHistory(prev => [...prev, { text: error.message, type: 'incoming' }]);\r\n    }\r\n  };\r\n\r\n  const handleMessageSend = (event) => {\r\n    event.preventDefault();\r\n    if (userMessage.trim() && !isResponseGenerating) {\r\n      setChatHistory(prev => [...prev, { text: userMessage, type: 'outgoing' }]);\r\n      setUserMessage('');\r\n      generateAPIResponse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`ai-all ${theme}`}>\r\n      <p className=\"ai-subtitle\">GPT AI Health Care</p>\r\n\r\n      {/* AI Suggestion list */}\r\n      <ul className=\"ai-suggestion-list\">\r\n        <li className=\"ai-suggestion\" onClick={() => setUserMessage(\"Nếu tôi bị ho cần điều trị như thế nào?\")}>\r\n          <h4 className=\"ai-text\">\r\n            Nếu tôi bị ho cần điều trị như thế nào để tình hình sức khỏe được cải thiện tốt hơn ?\r\n          </h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">draw</span>\r\n        </li>\r\n        <li className=\"ai-suggestion\" onClick={() => setUserMessage(\"Nếu tôi bị sổ mũi thì phải xử lý như thế nào ?\")}>\r\n          <h4 className=\"ai-text\">\r\n            Nếu tôi bị sổ mũi thì phải xử lý như thế nào ?\r\n          </h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">lightbulb</span>\r\n        </li>\r\n        <li className=\"ai-suggestion\" onClick={() => setUserMessage(\"Bạn có thể tư vấn giúp tôi kế hoạch giảm cân ?\")}>\r\n          <h4 className=\"ai-text\">\r\n            Bạn có thể tư vấn giúp tôi kế hoạch giảm cân ?\r\n          </h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">explore</span>\r\n        </li>\r\n        <li className=\"ai-suggestion\" onClick={() => setUserMessage(\"Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\")}>\r\n          <h4 className=\"ai-text\">\r\n            Tư vấn thói quen sinh hoạt lành mạnh giúp sức khỏe trở nên tốt hơn.\r\n          </h4>\r\n          <span className=\"ai-icon material-symbols-rounded\">code</span>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* AI Chat List / Container */}\r\n      <div className=\"ai-chat-list\">\r\n        {chatHistory.map((message, index) => (\r\n          <div key={index} className={`message ${message.type}`}>\r\n            <p className=\"text\">{message.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* AI Typing Area */}\r\n      <div className=\"ai-typing-area\">\r\n        <form onSubmit={handleMessageSend} className=\"ai-typing-form\">\r\n          <div className=\"ai-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              value={userMessage}\r\n              onChange={(e) => setUserMessage(e.target.value)}\r\n              placeholder=\"Nhập câu hỏi của bạn tại đây...\"\r\n              className=\"ai-typing-input\"\r\n              required\r\n            />\r\n            <button type=\"submit\" id=\"send-ai-message-button\" className=\"ai-icon material-symbols-rounded\">\r\n              send\r\n            </button>\r\n          </div>\r\n          <div className=\"ai-action-buttons\">\r\n            <span id=\"theme-ai-toggle-button\" onClick={toggleTheme} className=\"ai-icon material-symbols-rounded\">\r\n              {theme === \"light_mode\" ? \"dark_mode\" : \"light_mode\"}\r\n            </span>\r\n            <span\r\n              id=\"delete-ai-chat-button\"\r\n              className=\"ai-icon material-symbols-rounded\"\r\n              onClick={() => {\r\n                localStorage.removeItem(\"saved-chats\");\r\n                setChatHistory([]);\r\n              }}\r\n            >\r\n              delete\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatAIApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACc,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,WAAW,CAAC;EAErF,MAAMC,OAAO,GAAG,yCAAyC,CAAC,CAAC;EAC3D,MAAMC,OAAO,GAAI,sFAAqFD,OAAQ,EAAC;;EAE/G;EACAf,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtD,IAAIG,UAAU,EAAE;MACdP,cAAc,CAACQ,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGV,KAAK,KAAK,YAAY,GAAG,WAAW,GAAG,YAAY;IACpEC,QAAQ,CAACS,QAAQ,CAAC;IAClBR,YAAY,CAACS,OAAO,CAAC,YAAY,EAAED,QAAQ,CAAC;EAC9C,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,kBAAkB,KAAK;IACrD,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAIC,gBAAgB,GAAG,CAAC;IAExB,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC;MACAL,kBAAkB,CAACD,IAAI,IAAI,CAACI,gBAAgB,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,IAAIF,KAAK,CAACE,gBAAgB,EAAE,CAAC;;MAE1F;MACA,IAAIA,gBAAgB,KAAKF,KAAK,CAACK,MAAM,EAAE;QACrCC,aAAa,CAACH,cAAc,CAAC;QAC7BrB,uBAAuB,CAAC,KAAK,CAAC;QAC9BK,YAAY,CAACS,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACe,SAAS,CAACxB,WAAW,CAAC,CAAC,CAAC,CAAC;MACpE;IACF,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;;EAED;EACA,MAAMyB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC1B,uBAAuB,CAAC,IAAI,CAAC;IAE7B,IAAI;MACF,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAACpB,OAAO,EAAE;QACpCqB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAErB,IAAI,CAACe,SAAS,CAAC;UACnBO,QAAQ,EAAE,CACR;YACEC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,CAAC;cAAElB,IAAI,EAAEnB;YAAY,CAAC;UAC/B,CAAC;QAEL,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAAC8B,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,0BAAyBT,QAAQ,CAACU,UAAW,EAAC,CAAC;MAClE;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,IAAIA,IAAI,CAACE,UAAU,IAAIF,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;QACzD,MAAMC,WAAW,GAAGJ,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAACP,KAAK,CAAC,CAAC,CAAC,CAAClB,IAAI,CAAC2B,OAAO,CAClE,gBAAgB,EAChB,IACF,CAAC;QACDzC,cAAc,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAE5B,IAAI,EAAEnB,WAAW;UAAEgD,IAAI,EAAE;QAAW,CAAC,CAAC,CAAC;QAC1E3C,cAAc,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAE5B,IAAI,EAAE0B,WAAW;UAAEG,IAAI,EAAE;QAAW,CAAC,CAAC,CAAC;MAC5E,CAAC,MAAM;QACL,MAAM,IAAIT,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACd9C,uBAAuB,CAAC,KAAK,CAAC;MAC9BE,cAAc,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAE5B,IAAI,EAAE8B,KAAK,CAACC,OAAO;QAAEF,IAAI,EAAE;MAAW,CAAC,CAAC,CAAC;IAC9E;EACF,CAAC;EAED,MAAMG,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIrD,WAAW,CAACsD,IAAI,CAAC,CAAC,IAAI,CAACpD,oBAAoB,EAAE;MAC/CG,cAAc,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAE5B,IAAI,EAAEnB,WAAW;QAAEgD,IAAI,EAAE;MAAW,CAAC,CAAC,CAAC;MAC1E/C,cAAc,CAAC,EAAE,CAAC;MAClB4B,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACEhC,OAAA;IAAK0D,SAAS,EAAG,UAASjD,KAAM,EAAE;IAAAkD,QAAA,gBAChC3D,OAAA;MAAG0D,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGjD/D,OAAA;MAAI0D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAChC3D,OAAA;QAAI0D,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,yCAAyC,CAAE;QAAAuD,QAAA,gBACrG3D,OAAA;UAAI0D,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAExB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL/D,OAAA;UAAM0D,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACL/D,OAAA;QAAI0D,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,gDAAgD,CAAE;QAAAuD,QAAA,gBAC5G3D,OAAA;UAAI0D,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAExB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL/D,OAAA;UAAM0D,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACL/D,OAAA;QAAI0D,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,gDAAgD,CAAE;QAAAuD,QAAA,gBAC5G3D,OAAA;UAAI0D,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAExB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL/D,OAAA;UAAM0D,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACL/D,OAAA;QAAI0D,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,qEAAqE,CAAE;QAAAuD,QAAA,gBACjI3D,OAAA;UAAI0D,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAExB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL/D,OAAA;UAAM0D,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGL/D,OAAA;MAAK0D,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BpD,WAAW,CAAC0D,GAAG,CAAC,CAACZ,OAAO,EAAEa,KAAK,kBAC9BlE,OAAA;QAAiB0D,SAAS,EAAG,WAAUL,OAAO,CAACF,IAAK,EAAE;QAAAQ,QAAA,eACpD3D,OAAA;UAAG0D,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEN,OAAO,CAAC/B;QAAI;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAD9BG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN/D,OAAA;MAAK0D,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B3D,OAAA;QAAMmE,QAAQ,EAAEb,iBAAkB;QAACI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3D3D,OAAA;UAAK0D,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B3D,OAAA;YACEmD,IAAI,EAAC,MAAM;YACXiB,KAAK,EAAEjE,WAAY;YACnBkE,QAAQ,EAAGC,CAAC,IAAKlE,cAAc,CAACkE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAChDI,WAAW,EAAC,qEAAiC;YAC7Cd,SAAS,EAAC,iBAAiB;YAC3Be,QAAQ;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACF/D,OAAA;YAAQmD,IAAI,EAAC,QAAQ;YAACuB,EAAE,EAAC,wBAAwB;YAAChB,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAAC;UAE/F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN/D,OAAA;UAAK0D,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC3D,OAAA;YAAM0E,EAAE,EAAC,wBAAwB;YAACV,OAAO,EAAE9C,WAAY;YAACwC,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EACjGlD,KAAK,KAAK,YAAY,GAAG,WAAW,GAAG;UAAY;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACP/D,OAAA;YACE0E,EAAE,EAAC,uBAAuB;YAC1BhB,SAAS,EAAC,kCAAkC;YAC5CM,OAAO,EAAEA,CAAA,KAAM;cACbrD,YAAY,CAACgE,UAAU,CAAC,aAAa,CAAC;cACtCnE,cAAc,CAAC,EAAE,CAAC;YACpB,CAAE;YAAAmD,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAvKID,SAAS;AAAA2E,EAAA,GAAT3E,SAAS;AAyKf,eAAeA,SAAS;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}